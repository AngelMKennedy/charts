# Default values for xnat-web.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.gitlab.com/cerds/xnat-deploy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/whitelist-source-range: 130.95.0.0/16
    # nginx.ingress.kubernetes.io/proxy-connect-timeout: "150"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "100"
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "100"
    # nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    # nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  - name: archive
    accessMode: ReadWriteMany
    mountPath: "/data/xnat/archive"
    # storageClassName: "-"
    size: 1Ti
  - name: cache
    accessMode: ReadWriteOnce
    mountPath: "/data/xnat/cache"
    size: 10Gi
  - name: prearchive
    accessMode: ReadWriteMany
    mountPath: "/data/xnat/prearchive"
    size: 10Gi
  - name: work
    accessMode: ReadWriteOnce
    mountPath: "/data/xnat/home/work"
    size: 1Gi
  - name: logs
    accessMode: ReadWriteOnce
    mountPath: "/data/xnat/home/logs"
    size: 1Gi

plugin:
  download: false
  plugins: {}
    #ldap:
    #  filename: xnat-ldap-auth-plugin-1.0.0.jar
    #  url: "https://bitbucket.org/xnatx/ldap-auth-plugin/downloads/xnat-ldap-auth-plugin-1.0.0.jar"
    #openid:
    #  filename: openid-auth-plugin-1.0.0.jar
    #  url: "http://dev.redboxresearchdata.com.au/nexus/service/local/repositories/snapshots/content/au/edu/qcif/xnat/openid/openid-auth-plugin/1.0.0-SNAPSHOT/openid-auth-plugin-1.0.0-20190409.122010-10.jar"

# NB: uncomment the plugin download required for the authentication or install the plugin via other methods
authentication:
  methods: {}
    #ldap:
    #  # https://wiki.xnat.org/documentation/xnat-administration/configuring-authentication-providers
    #  providers:
    #    # uniquely identifies the provider in case there are multiple providers of a given type
    #    - id: ldap1
    #      name: "Institution Active Directory"
    #      address: PPP
    #      userdn: PPP
    #      password: PPP
    #      search:
    #        base: PPP
    #        filter: "(sAMAccountName={0})"
    #openid:
    #  # https://github.com/NrgXnat/xnat-openid-auth-plugin
    #  name: "OpenID Authentication Provider"
    #  disableUsernamePasswordLogin: false
    #  # List of providers that appear on the login page
    #  providers:
    #    - id: aaf
    #      # https://support.aaf.edu.au/support/solutions/articles/19000096640-openid-connect-
    #      accessTokenUri: https://central.aaf.edu.au/providers/op/token
    #      #accessTokenUri: https://central.test.aaf.edu.au/providers/op/token
    #      userAuthUri: https://central.aaf.edu.au/providers/op/authorize
    #      #userAuthUri: https://central.test.aaf.edu.au/providers/op/authorize
    #      clientID: PPP
    #      clientSecret: PPP
    #      scopes: [ openid, profile, email ]
    #      link: PPP
    #      # Flag that sets if we should be checking email domains
    #      shouldFilterEmailDomains: false
    #      # Domains below are allowed to login, only checked when 'shouldFilterEmailDomains' is true
    #      allowedEmailDomains:
    #        - uwa.edu.au
    #        - usyd.edu.au
    #      # Flag to force the user creation process, normally this should be set to true
    #      forceUserCreate: true
    #      # Flag to set the enabled property of new users, set to false to allow admins to manually enable users before allowing logins, set to true to allow access right away
    #      userAutoEnabled: false
    #      # Flag to set the verified property of new users
    #      userAutoVerified: false
    #      # Property names to use when creating users
    #      propertyNames:
    #        email: email
    #        givenName: name
    #        familyName: deliberately_unknown_property
    #    - id: google
    #      accessTokenUri: https://central.aaf.edu.au/providers/op/token
    #      userAuthUri: https://central.aaf.edu.au/providers/op/authorize
    #      clientID: PPP
    #      clientSecret: PPP
    #      scopes: [ openid, profile, email ]
    #      link: PPP
    #      # Flag that sets if we should be checking email domains
    #      shouldFilterEmailDomains: false
    #      # Domains below are allowed to login, only checked when 'shouldFilterEmailDomains' is true
    #      allowedEmailDomains:
    #        - uwa.edu.au
    #        - usyd.edu.au
    #      # Flag to force the user creation process, normally this should be set to true
    #      forceUserCreate: true
    #      # Flag to set the enabled property of new users, set to false to allow admins to manually enable users before allowing logins, set to true to allow access right away
    #      userAutoEnabled: false
    #      # Flag to set the verified property of new users
    #      userAutoVerified: false
    #      # Property names to use when creating users
    #      propertyNames:
    #        email: email
    #        givenName: given_name
    #        familyName: family_name

postgresql:
  postgresqlDatabase: xnat
  postgresqlUsername: xnat
  postgresqlPassword: xnat
