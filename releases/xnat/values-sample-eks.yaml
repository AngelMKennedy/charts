global:
  postgresql:
    postgresqlPassword: xxxxxx

postgresqlEnabled: false
postgresqlExternalName: xxxxxxx

xnat-web:
  dicom_scp:
    recievers:
      - ae_title: "XNAT"
        port: 8104
        nodePort: 32514
  image:
    repository: registry.gitlab.com/cerds/xnat-deploy
    pullPolicy: IfNotPresent

  resources:
    requests:
      cpu: 2000m
      memory: 4000Mi
    limits:
      cpu: 4000m
      memory: 6000Mi

  aws:
    enabled: true
    podLabels:
      workertype: fargate
    nodeSelector:
      # workertype: nodegroup
    storage:
      csiDriver: efs.csi.aws.com
      efsSystemId: fs-xxxxx
      archiveAccessPointId: fsap-xxxxx
      prearchiveAccessPointId: fsap-xxxxx
    
  # openstack:
  #   resource1: {}
  #   resource2: {}  

  volumes:
    archive:
      accessMode: ReadWriteMany
      #existingClaim: ""
      mountPath: "/data/xnat/archive"
      #storageClassName: "-"
      size: 1Ti
    prearchive:
      accessMode: ReadWriteMany
      #existingClaim: ""
      mountPath: "/data/xnat/prearchive"
      #storageClassName: "-"
      size: 1Ti
  
  service:
    type: NodePort
    port: 80
    nodePort: 30001
    headless: false

  ingress:
    enabled: true
    annotations:
      # # default for microk8s
      # kubernetes.io/ingress.class: "nginx"
      #########################
      # for aws
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/subnets: subnet-0ca0ff609b04ee2b6,subnet-08fc5293a45897e7a,subnet-04a263a1dc7ed2e52
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443},{"HTTP": 80}]'
      alb.ingress.kubernetes.io/success-codes: "302"
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-2:078690265916:certificate/73292fa0-a775-49d8-9bb3-de5dd09a40a8
      alb.ingress.kubernetes.io/healthcheck-path: /
      alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
      alb.ingress.kubernetes.io/tags: Project=AIS
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
      nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "150"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "100"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "100"
    hosts:
      # first domain name is the main one that should used by openid
      # - xnat.microk8s.local:
      - xnat1.eks.researchdevs.cc:
          # for aws ssl redirect only
          '/*': 
            serviceName: ssl-redirect
            servicePort: use-annotation

  plugin:
    download: false
    plugins:
      openid:
        providers: 
          aaf:
            clientId: <AAFClientID>
            clientSecret: <AAFClientSecrect>
            allowedEmailDomains: <AllowedDomain1,AllowedDomain2>
          google:
            clientId: <GoogleClientID>
            clientSecret: GoogleClientSecret
            allowedEmailDomains: "sydney.edu.au"

  
